[
    {
        "role": "user",
        "parts": [
            {
                "text": "Table: Employee\n\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| id          | int     |\n| name        | varchar |\n| salary      | int     |\n| managerId   | int     |\n+-------------+---------+\nid is the primary key (column with unique values) for this table.\nEach row of this table indicates the ID of an employee, their name, salary, and the ID of their manager.\n \n\nWrite a solution to find the employees who earn more than their managers.\n\nReturn the result table in any order.\n\nThe result format is in the following example.\n\n \n\nExample 1:\n\nInput: \nEmployee table:\n+----+-------+--------+-----------+\n| id | name  | salary | managerId |\n+----+-------+--------+-----------+\n| 1  | Joe   | 70000  | 3         |\n| 2  | Henry | 80000  | 4         |\n| 3  | Sam   | 60000  | Null      |\n| 4  | Max   | 90000  | Null      |\n+----+-------+--------+-----------+\nOutput template: \n+----------+\n| Employee |\n+----------+\n| ?        |\n+----------+\nExplanation: Joe is the only employee who earns more than his manager.\n\n\n-------------------------------------------------------------------------------------------------------------------------------\n\nPlease reply in json format according to the above structure, without redundant output and escape characters, so that I can get the MS SQL syntax for testing:\nexample:\n\n{\n  \"Description\": \"xxxxxxx\",\n  \"sql\": \"SELECTxxxx;\",\n  \"Explanation\": \"xxxxxx\"\n}"
            }
        ]
    },
    {
        "parts": [
            {
                "text": "{\n  \"Description\": \"Find employees who earn more than their managers.\",\n  \"sql\": \"SELECT e.name AS Employee\\nFROM Employee e\\nJOIN Employee m ON e.managerId = m.id\\nWHERE e.salary > m.salary;\",\n  \"Explanation\": \"This query selects the names of employees (e.name) who earn more than their managers (m.salary). It first joins the Employee table (e) with itself on the managerId column to create a self-referencing join. Then, it filters the results to include only employees whose salary is greater than their manager's salary.\"\n}"
            }
        ],
        "role": "model"
    }
]